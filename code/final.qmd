---
title: "Final"
author: "Veronique Letourneau, Victoria Yang & Sundeep Rodricks"
date: "2023-06-16"
format:
  html:
    toc: true
    toc-location: left
    code-fold: true
    theme: yeti
editor: visual
execute:
  message: false
  warning: false
bibliography: references.bib
link-citations: true
---

# Problem 1

## Intro

The banner-tailed kangaroo rat, *Dipodomys spectabilis*, makes large mounds that can be inhabited for years [@schroder1975]. These mounds play an important role in their ecosystem that potentially promotes plant species diversity [@guo1996]. Kangaroo rats are considered a keystone species because of the effects they have on the plant community in their habitat [@heske1993]. So, studying the link between plants and these mounds can be important to understanding the way in which plants grow in this habitat. The purpose of this analysis is to identify whether or not there is a relationship between seed count and location on kangaroo rat mounds.

H~0~: There is no relationship between Kangaroo Rat Mound Location and total seed count.

H~A~: There is a relationship between Kangaroo Rat Mound Location and total seed count.

Significance level = 0.05

## Methods

The initial data wrangling process involved reading in the dataset and performing several cleaning steps. The dataset was read using the read.csv() function from the readr package. The resulting data was stored in the kratseed object. To clean the data, we excluded rows with microhabitat composition data (species: "soil", "dist", "gravel", "litter", "plant") from the seed_data object using the negation operator (!) and the %in% function. And made the column names cleaner using the clean_names() function from the janitor package.

We then checked for missing data in the dataset with a visualization using the gg_miss_var() function from the naniar package. The resulting visualization showed no missing data for mound locations or seed counts.

Checking sssumptions normality and independence with histograms and QQ plots was the next step before performing our statistical test. The histogram was created using the geom_histogram() function from the ggplot2 package. It displayed the distribution of the seed count variable, with the x-axis representing the seed count and the y-axis representing the count of observations.

The QQ plot was created using the stat_qq() function from the ggplot2 package. It displayed the quantiles of the seed count variable against the quantiles of a theoretical normal distribution. The stat_qq_line() function was used to add a line representing the expected distribution if the data were normally distributed. The QQ plot was faceted by location to visualize the distribution for each mound location.

The Kruskal-Wallis test and Wilcox Pairwise post hoc test were chosen for this particular dataframe to assess the significance of the relationship, the null hypothesis (H0) stated that there is no relationship between Kangaroo Rat Mound Location and total seed count. The alternative hypothesis (HA) stated that there is a relationship between Kangaroo Rat Mound Location and total seed count. The significance level was set at 0.05.

1.  Read in packages

```{r}
library(here)
library(tidyverse)
library(utils)
library(readr)
library(janitor)
library(dplyr)
library(naniar)
library(ggplot2)
library(performance)
library(effsize)
library(rstatix)
library(flextable)
```

2.  Initial data wrangling:

```{r prob-1-data}
  # reading in the data
kratseed <- read.csv("~/github/ENVS-193DS_final/data/knb-lter-sev.208.102459/sev208_kratseedbank_20120213.txt")

  # creating a new object of all columns, but excluding the microhabitat composition rows which are in percentages in the seed count column
  seed_data <- kratseed[!kratseed$species %in% c("soil", "dist", "gravel", "litter", "plant"), ] %>% 
  # making the column names cleaner
  clean_names() %>%
  # renaming columns
  rename(c("location" = "loc", "seed_count" = "seeds")) %>% 
  # selecting the columns of interest by removing `mnd`,`dir` and `species`
  mutate(species = NULL, dir = NULL, mnd = NULL) %>% 
  # renaming locations
  mutate(location = case_when(
    location == "B" ~ "Base", 
    location == "D" ~ "Surrounding",
    location == "E" ~ "Edge",
    location == "I" ~ "Inter_Space"))
```

3.  Visualizing missing data:

```{r prob1-missing-data}
# visualizing missing data
gg_miss_var(seed_data) +
labs(title = "Missing Data Visualization of Mound Locations and Seed Count",
     caption = "Visualization shows no missing data for mound locations nor seed counts") +
  theme(plot.title = element_text(size = 10, hjust = 0.5)) +
  theme(plot.caption = element_text(size = 9, hjust=0.5))
```

4.  Exploratory Visualization:

```{r prob1-exp-vis}
# plotting an exploratory visualization 
ggplot(data = seed_data, aes(x = location, y = seed_count)) +
  geom_jitter() +
  labs(title = "Exploratory Visualization of Seed Count Across Mound Locations ",
     caption = "Visualization shows the highest seed count 
     at the base of the mound and decreasing count further 
     from the mound") +
  theme(plot.title = element_text(size = 10, hjust = 0.5)) +
  theme(plot.caption = element_text(size = 8, hjust=0.5))
```

5.  Visually checking for normality of variables and distribution with a histogram and QQ Plot:

```{r prob1-histogram}
# checking histogram for independence of variables and spread
histogram_kseed <- ggplot(data = seed_data, aes(x = seed_count)) +
  geom_histogram(bins = 20) +
  labs(x = "Seed Count", y = "Count") +
  theme_bw()
histogram_kseed
```

```{r prob1-qqplot}
# checking qq plot for normality
ggplot(data = seed_data) +
  stat_qq(aes(sample = seed_count)) +
  stat_qq_line(aes(sample = seed_count), color = "orange") +
  facet_wrap(~ location)
```

6.  Using the Shapiro Wilk test to check for normal distribution:

```{r prob1-shapiro}
# The p-value of the Shapiro-Wilk Test is greater than 0.05. Meaning the data significantly deviates from a normal distribution.
shapiro.test(seed_data$seed_count)
```

The QQ plot shows that the sample distribution is not linear or normally spread. The histogram visualization shows that the distribution of the seed count data is not normally distributed. And the Shapiro-Wilk test (p-value = 2.2e-16) shows that the data deviates from a normal distribution as well (p-value \< 0.05). Therefore, a non-parametric alternative to a one-way ANOVA (Kruskal-Wallis test) is performed to compare the seed counts between rat mound locations.

7.  Kruskal-Wallis Test and table:

```{r}
# creating a new object for the Kruskal-Wallis Test
kruskal_test <- kruskal.test(seed_count ~ location, data = seed_data)

# creating a readable table of the test results
kruskal_test_table <- tidy(kruskal_test) %>% 
  mutate(statistic = round(statistic, digits = 3)) %>% 
  mutate(p.value = round(p.value, digits = 4)) %>% 
  flextable() %>% 
  autofit()
kruskal_test_table
```

From the Kruskal-Wallis test, we can conclude that there are significant differences between the treatment groups because the p-value is less than the significance value of 0.05 (p-value = 0.0024). Multiple pairwise comparisons between groups were conducted and we know there is a substantial difference between groups based on the Kruskal-Wallis test's results, but we don't know which pairings of groups are different. The function pairwise.wilcox.test() can be used to calculate pairwise comparisons between group levels with different testing corrections.

8.  Pairwise-Wilcox Test and table:

```{r}
# running poct hoc test to calculate pairwise comparisons between locations using `pairwise.wilcox.test`
pairwise_test <- pairwise.wilcox.test(seed_data$seed_count, seed_data$location)

# creating a readable table of the test results
wilcox_table <- tidy(pairwise_test) %>% 
#clean up table
  mutate(p.value = round(p.value, digits = 4)) %>% 
  flextable() %>% 
  autofit()
wilcox_table
```

The results of the Pairwise Wilcox Test show that not all of the mound locations significantly differ in seed counts, but that the Inter-Space of the mound has a significant difference in seed count between the Base of the mound (p.value = 0.0018), and the Surrounding of the mound (p.value = 0.0453) but has does not show a significant difference in seed counts with the Edge of the mounds (p.value = 0.0551).

## Results

We analyzed the difference between seed count at different kangaroo rat mounds at the Sevilleta National Wildlife Refuge in New Mexico. The null hypothesis stated that there is no relationship between seed count and the location of kangaroo rat mounds, while the alternative hypothesis stated that there is a relationship between these two variables.Â 

Our analysis using a Kruskal-Wallis test and Pairwise Wilcox test showed that there is a relationship between seed count and location. The pairwise Wilcox test showed that there is a significant difference in the number of seeds found at the base and surrounding areas of the mound when compared to inter-space locations. The p-values we calculated from the Pairwise Wilcox test were 0.0018 for the base of the mound and 0.0453 for the surrounding areas, which are both less than the significance level of 0.05. So, we reject the null hypothesis.

Biologically, this means that kangaroo rat mounds have more seeds than the space between them, which indicates that there is a link between kangaroo rats and seed dispersal. The following plot shows the relationship between seed count and location. The table also shows the exact seed count per location. The difference between the seed count in inter-space areas and other locations is made clear by this plot.

```{r}
# creating a new object for the sum of seed counts per location
totalseedcount <- aggregate(data = seed_data, seed_count ~ location, FUN = sum)
totalseedcount


# creating a figure of the total seed count data
ggplot(data = totalseedcount, aes(x = location, y = seed_count, fill = location)) +
  # creating a column figure
  geom_col() +
  # adding labels
  labs(x = "Kangaroo Rat Mound Locations", 
       y = "Total Seed Count",  
       caption = "Total of seed counts per Kangaroo rat mound locations.
       Data source: Koontz and Simpson (2010), The composition of seed banks 
       on kangaroo rat (Dipodomys spectabilis) mounds in a Chihuahuan Desert grassland", 
       title = "Total Seed Count for Each Kangaroo Rat Mound Locations",        color = "location") +
  theme_classic() +
  # choosing different colors for each location
  scale_fill_manual(values = c("lightgreen", "lightpink", "lightgrey", "lightblue")) +
  # adjusting/edits
  theme(
        legend.position = c(0.85, 0.7),
        legend.text = element_text(size = 11),
        legend.title = element_text(size = 11),
        # clear background
        panel.grid = element_blank(), 
        # font, position, and sizes of lables
        axis.text = element_text(size = 7), 
        axis.title = element_text(size = 9),
        plot.title = element_text(size = 12, hjust = 0.5),
        plot.caption = element_text(size = 7, hjust = 0.5))
```

\

# Problem 2

## Intro

Shrubification is the expansion of woody shrubs in the Arctic tundra [@seaver2022]. Shrubification is important to study because it leads to a shift in the carbon balance in the Arctic, which can cause a change in plant composition [@mekonnen2021]. These shrubs change the microclimate as well, altering surface albedo, soil temperature, and permafrost stability [@aartsma2021]. Because shrubification changes the local environment, it can affect the flowering phenology of plants [@seaver2022]. Our analysis is to determine how seed count varies with plot type, plant species, and total number of plant inflorescences.

H~0~: There is no relationship between treatment, species, seed count, and number of inflorescences.

H~A~: There is a relationship between treatment, species, seed count, and number of inflorescences.

Significance level: 0.05

## Methods

The dataset was prepared by excluding rows with missing microhabitat composition data and renaming columns for clarity. Missing data was visualized using the **`skimr`** package to check for any missing values, revealing no missing values for mound locations or seed counts. A pairs plot, created with the **`GGally`** package visualized the relationships between variables, while a histogram of seed counts, plotted using **`ggplot2`** examined the distribution.

For the statistical analysis, generalized linear models (GLMs) were constructed using the **`stats`** package. The GLMs explored the relationship between seed count and predictors such as treatment, species, and number of inflorescences. Different GLM models were built with varying combinations of predictors, using either Poisson or negative binomial family distributions.

Assumption checks were performed on the models by examining the residuals. Models that violated the assumptions were excluded from further analysis. The **`DHARMa`** package and the **`lmtest`** package were used for the assumption checks. The remaining models were compared using the Akaike Information Criterion (AIC) with the **`MuMIn`** package to identify the best model (model 11). Model summaries, confidence intervals, and adjusted R-squared values were calculated for this model. The **`broom`** package was used to tidy the model outputs and calculate confidence intervals, while the **`ggeffects`** package was used to calculate adjusted R-squared values.

To assess the significance of the relationship, a null hypothesis (H0) was set, stating no relationship between treatment, species, seed count, and the number of inflorescences. The alternative hypothesis (HA) stated the presence of a relationship. The significance level was set at 0.05.

1.  Read in packages

```{r}
# model packages
library(MASS)
library(lme4)
library(glmmTMB)

# diagnostics and model info
library(DHARMa)
library(MuMIn)
library(ggeffects)
library(lmtest)
library(broom)

# general usage
library(tidyverse)
library(skimr)
library(GGally)
library(flextable)

```

2.  Read in data

```{r prob-2-data}
# reading in seed counts data
seeds <- read_csv(here("data", "knb-lter-nwt.297.1", "shrubstudy_seed_ctwt.ms.data.csv")) %>%
  
  # select the columns of interest
  dplyr::select(treatment, species, total_nr_infl, nr_seeds) %>% 
  
  # change variable names to be more descriptive
  mutate(treatment = case_when(
    treatment == "control" ~ "open",
    treatment == "shrub" ~ "shrub")) %>% 
  
  # rename columns for readability
  rename("num_inflorescences" = total_nr_infl, "num_seeds" = nr_seeds)
```

2.  Visualize missing data:

```{r}
gg_miss_var(seeds)
```

**Figure 1.** Number of missing values from the seeds data frame.

4.  Subsetting the data by dropping NAs:

    Since I took this data set from online, I do not know why there are NA values so for the purpose of this analysis, I will exclude them.

```{r}
seeds_subset <- seeds %>% 
  
  # drops rows with NA values in the num_seeds column
  drop_na(num_seeds)
```

5.  Explore the data

-   Create a pairs plot to visualize the relationships between variables:

```{r}
seeds_subset %>% 
  
  # select variables to include in plot
  dplyr::select(treatment:num_inflorescences) %>% 
  
  # create pairs plot
  ggpairs()
```

-   Plot a histogram of seed counts

```{r}
ggplot(data = seeds_subset, aes(x = num_seeds)) +
  geom_histogram(bins = round(2*nrow(seeds_subset)^(1/3)),
                 fill="#45B39D", 
                 color = "#e9ecef") +
  labs(x = "Number of Seeds", y = "Count",
       title = "Histogram of Number of Seeds")
```

6.  Build generalized linear models (GLM)

    We are using a linear regression model because we are dealing with discrete (count) data.

```{r}
# GLM with all predictor variables (Poisson)
model1 <- glm(num_seeds ~ treatment + species + num_inflorescences, data = seeds_subset, family = "poisson")

# GLM with treatment as predictor variable (Poisson)
model2 <- glm(num_seeds ~ treatment, data = seeds_subset, family = "poisson")

# GLM with species as predictor variable (Poisson)
model3 <- glm(num_seeds ~ species, data = seeds_subset, family = "poisson")

# GLM with treatment and species as predictor variables (Poisson)
model4 <- glm(num_seeds ~ treatment + species, data = seeds_subset, family = "poisson")

# GLM with treatment and number of inflorescences as predictor variables (Poisson)
model5 <- glm(num_seeds ~ treatment + num_inflorescences, data = seeds_subset, family = "poisson")

# GLM with species and number of inflorescences as predictor variables (Poisson)
model6 <- glm(num_seeds ~ treatment + num_inflorescences, data = seeds_subset, family = "poisson")

# GLM with all predictor variables (negative binomial)
model7 <- glm.nb(num_seeds ~ treatment + species + num_inflorescences, data = seeds_subset)

# GLM with treatment as predictor variable (negative binomial)
model8 <- glm.nb(num_seeds ~ treatment, data = seeds_subset)

# GLM with species as predictor variable (negative binomial)
model9 <- glm.nb(num_seeds ~ species, data = seeds_subset)

# GLM with number of inflorescences as predictor variable (negative binomial)
model10 <- glm.nb(num_seeds ~ num_inflorescences, data = seeds_subset)

# GLM with treatment and species as predictor variables (negative binomial)
model11 <- glm.nb(num_seeds ~ treatment + species, data = seeds_subset)

# GLM with treatment and number of inflorescences as predictor variables (negative binomial)
model12 <- glm.nb(num_seeds ~ treatment + num_inflorescences, data = seeds_subset)

# GLM with species and number of inflorescences as predictor variables (negative binomial)
model13 <- glm.nb(num_seeds ~ species + num_inflorescences, data = seeds_subset)
```

7.  Look at residuals to check assumptions

```{r model1, include=FALSE}
plot(simulateResiduals(model1)) # bad
```

```{r model2, include=FALSE}
plot(simulateResiduals(model2)) # bad
```

```{r model3, include=FALSE}
plot(simulateResiduals(model3)) # bad
```

```{r model4, include=FALSE}
plot(simulateResiduals(model4)) # bad
```

```{r model5, include=FALSE}
plot(simulateResiduals(model5)) # bad
```

```{r model6, include=FALSE}
plot(simulateResiduals(model6)) # bad
```

```{r model7, include=FALSE}
plot(simulateResiduals(model7)) # bad
```

```{r model8, include=FALSE}
plot(simulateResiduals(model8)) # bad
```

Model9

```{r model9}
plot(simulateResiduals(model9)) # ok
```

```{r model10, include=FALSE}
plot(simulateResiduals(model10)) # bad
```

Model11

```{r model11}
plot(simulateResiduals(model11)) # ok
```

```{r model12, include=FALSE}
plot(simulateResiduals(model12)) # bad
```

```{r model13, include=FALSE}
plot(simulateResiduals(model13)) # bad
```

These are the only two models that met the GLM assumptions.

9.  Model comparisons

```{r}

# model9 and model11 meet the assumptions
MuMIn::model.sel(model9, model11)

# results: model11 has the lowest AIC
```

9.  Model summary for model 11 (treatment and species as predictors)

```{r}
# model summaries
summary(model11)

# confidence intervals
confint(model11)

# adjusted R2 values
r.squaredGLMM(model11)

# report model object results in table
table <- tidy(model11, conf.int = TRUE) %>% 
  
  # change the estimates, standard error, t-stats to round to 2 digits
  mutate(across(estimate:conf.high, ~ round(.x, digits = 2))) %>% 
  
  # replace the p values below the signifcance level with < 0.05
  mutate(p.value = case_when(p.value < 0.05 ~ "< 0.05")) %>% 
  
  # make it into flex table
  flextable() %>% 
  
  # change header labels
  set_header_labels(std.error = "standard error", 
                    statistic = "F-statistic",
                    p.value = "p-value",
                    conf.low = "low confidence interval",
                    conf.high = "high confidence interval")

  # fit it to the viewer
  autofit(table)
```

## Results

Neither of the models that included all predictors satisfied assumptions, therefore, we used a simpler model. We determined that the model that used treatment and species as predictor variables was the best for this analysis. This model was chosen because it has the lowest AIC of the models that meet the assumptions of GLM. A low AIC indicates that this is the simplest explanation for the relationship. The results of our analysis showed that seed count was significantly related to the species CARRUP, GEUROS, MINOBT, and KOBMYO since the p-values for those were less than the significance level of 0.05. Species TRIDAS can be excluded from this analysis because there are significant missing seed count data for that specific species.

So, we can reject the null hypothesis because there is a statistical significant relationship between at least two variables. Biologically, this means that there is a relationship between species and seed count.

This is a plot of the model that we used. This visualization shows the relationship between seed count, plant species, and treatment (plot type).

```{r model11-visualization}

# visualization for model 11
ggplot(data = model11, aes(x = species, y = num_seeds, fill = treatment)) +
  geom_boxplot() +
  labs(x = "Species", 
       y = "Seed Count", 
       title = "Number of Seeds vs Plant Species and Plot Type (Open or Shrub)") +
  theme_gray() +
  theme(
        # font, position, and sizes of labels
        axis.title = element_text(size = 9),
        plot.title = element_text(size = 12, hjust = 0.5),
        plot.caption = element_text(size = 7, hjust = 0.5))
```
